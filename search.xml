<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[网络基础六]]></title>
    <url>%2F2019%2F10%2F24%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%85%AD%2F</url>
    <content type="text"><![CDATA[1.6IpsecVPN 1.VPN：Virtaul Private Network虚拟私有网络，实现内网之间的通信。 私网之间的通信方式： ​ 专线，安全性高，但是成本比较高; ​ 租用链路； ​ VPN 2.网络安全的方面： （1）数据被窃听：保障数据的机密性， （2）被篡改；保障数据的完整性， （3）防重放：给每个数据一个编号Sequence， （4）源认证；保障数据的发送和接收方都是合法的， 3.常见的算法 （1）对称加密：加密和解密用的是同一把钥匙（算法） ​ 常见的对称加密算法：DES、3DES、AES ​ 特点：速度快，但是存在被窃听的危险。 （2）非对称加密：加密和解密用的不是一把钥匙，是一个秘钥对————公钥和私钥。 ​ 基本传输方式：用公钥进行加密，用私钥来进行解密。 ​ 非对称加密算法：DH算法和RSA（证书） ​ 特点：速度慢，但是更安全。 （3）哈希算法：校验数据的完整性，防止被篡改。 ​ 常见算法：md5/sha/Hmac 4.IpsecVPN： 协商分为2个阶段： 第一阶段用来协商秘钥的安全性；使用的是isakmp协议叫做互联网秘钥交互协议。 第二阶段是用来保证数据的安全性。 （1）第一步：先实现公网通信。 ​ ip route 0.0.0.0 0.0.0.0 12.1.1.2 （2）第二步：定义第一阶段，密码和密码的加密方式等 ​ R1(config)#crypto isakmp policy 10 //定义第一阶段的策略，编号为10 ​ R1(config-isakmp)#authentication pre-share //认证方式为预共享密码 ​ R1(config-isakmp)#encryption 3des //加密方式为3des ​ R1(config-isakmp)#hash sha //保证数据完整性，用的是sha ​ R1(config-isakmp)#group 2 //使用非对称加密算法对秘钥进行二次加密 ​ R1(config)#crypto isakmp key test.123 address 45.1.1.2 //定义密码为test.123，指定对端 ​ 的公网地址45.1.1.2 （3）第三步：定义第二阶段，保证数据的安全性 ​ R1(config)#crypto ipsec transform-set SET esp-3des esp-sha-hmac //定义转换集，保证数 ​ 据安全性，3des是用来加密的；sha是用来保证完整性的 ​ R1(cfg-crypto-trans)#mode tunnel //设置传输模式为隧道模式，默认配置 （4）第四步：定义感兴趣流量（对哪些流量进行加密，只有定义的感兴趣流量之间才能通信） ​ R1(config)#access-list 100 permit ip host 192.168.1.1 host 192.168.2.1 //允许192.168.1.1 ​ 和192.168.2.1之间通信 （5）第五步：把第2/3/4步绑到一起 ​ R1(config)#crypto map VPN 10 ipsec-isakmp //定义一个策略图，名称叫VPN，编号是10 ​ R1(config-crypto-map)#match address 100 //匹配感兴趣流量 ​ R1(config-crypto-map)#set peer 45.1.1.2 //设置对端公网地址45.1.1.2 ​ R1(config-crypto-map)#set transform-set SET //匹配转换集 ​ R1(config-crypto-map)#exit （6）第六步：应用到接口 ​ R1(config)#int f0/1 ​ R1(config-if)#crypto map VPN （7）检查命令： ​ R1#show crypto engine connections active //查看加密和解密的数据包 （8）后续需求： ​ 实现PC2和PC4之间的通信，修改ACL ​ R1(config)#access-list 100 permit ip host 192.168.1.2 host 192.168.2.2 同时也要在对端添 ​ 加 （9）实现NAT ​ R1(config)#access-list 110 deny ip 192.168.1.0 0.0.0.255 192.168.2.0 0.0.0.255 //在 ​ NAT流量里拒绝VPN流量，允许其他 ​ R1(config)#access-list 110 permit ip 192.168.1.0 0.0.0.255 any ​ R1(config)#ip nat inside source list 110 interface f0/1 overload //做NAT转换 （10）检查命令： ​ R1#show crypto isakmp policy //查看一阶段的策略 ​ R1#show crypto isakmp sa //SA叫做安全关联，是两个路由器协商完成后的策略存储方 ​ 式 ​ IPv4 Crypto ISAKMP SA ​ dst src state conn-id status //Status状态是Active表示可用 ​ 45.1.1.2 12.1.1.1 QM_IDLE 1001 ACTIVE ​ R5#show crypto isakmp key //一阶段，查看秘钥 ​ Keyring Hostname/Address Preshared Key ​ default 12.1.1.1 test.123 ​ R5#show crypto ipsec transform-set //检查第二阶段的转换集（保证数据的可靠性） ​ Transform set default: { esp-aes esp-sha-hmac } //default，默认策略 ​ will negotiate = { Transport, }, ​ Transform set shanghai: { esp-3des esp-sha-hmac } //自定义的shanghai策略 ​ will negotiate = { Tunnel, }, ​ R5#show crypto ipsec sa //查看第二阶段的sa（协商成功后的策略） ​ R5#show crypto map //查看map的内容 Crypto Map IPv4 &quot;SH&quot; 10 ipsec-isakmp //map名字叫SH，编号为10 ​ Peer = 12.1.1.1 //对端的公网Ip ​ Extended IP access list 100 //感兴趣流量 ​ access-list 100 permit ip host 192.168.2.1 host 192.168.1.1 ​ access-list 100 permit ip host 192.168.2.2 host 192.168.1.2 ​ Current peer: 12.1.1.1 ​ Security association lifetime: 4608000 kilobytes/3600 seconds ​ Responder-Only (Y/N): N ​ PFS (Y/N): N ​ Transform sets={ //第二阶段的转换集 ​ shanghai: { esp-3des esp-sha-hmac } , ​ } ​ ​ Interfaces using crypto map SH: //map应用的接口 ​ FastEthernet0/0 authentication pre-share 认证方式是预共享秘钥的方式 encryption 加密]]></content>
      <tags>
        <tag>IpsecVPN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础五]]></title>
    <url>%2F2019%2F10%2F24%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E4%BA%94%2F</url>
    <content type="text"><![CDATA[1.5路由协议：静态路由协议和动态路由协议1.路由协议：静态路由协议和动态路由协议。 （1）静态路由的基本格式：ip route 目标网段 目标子网 下一跳 （2）默认路由：一般配置在出口路由器（边缘路由器：一边连接的LAN，一边连接WAN），所有不知道的数据包都交给“互联网中的下一跳”。 ​ ip route 0.0.0.0 0.0.0.0 下一跳 （3）路由的冗余问题：增加多链路 ​ 负载均衡：多条链路同时进行数据传输，没有主备链路之分；如果一条down掉，另外一条还有“冗余”的功能。 ​ 配置举例： ​ R2(config)#ip route 192.168.2.0 255.255.255.0 13.0.0.2 ​ R2(config)#ip route 192.168.2.0 255.255.255.0 14.0.0.2 ​ R2(config)#do show ip route ​ S 192.168.2.0/24 [1/0] via 13.0.0.2 ​ [1/0] via 14.0.0.2 ​ 浮动路由：多条链路中只有一条是主链路，其他都是备份链路；只有主链路发生故障，备份链路才会被启用。 ​ 通过修改静态路由的优先级（管理距离），来决定哪条链路是主链路。 ​ 优先级的范围是1——255，越小越优先。默认是1. ​ R1(config)#ip route 0.0.0.0 0.0.0.0 192.168.3.2 //默认的优先级为1，默认是主链路 ​ R1(config)#ip route 0.0.0.0 0.0.0.0 192.168.30.2 10 //修改路由的优先级为10，成为备份链路 ​ R1#show ip route ​ S* 0.0.0.0/0 [10/0] via 192.168.30.2 //默认情况下，只有一条链路负责转发数据； ​ 在路由表中，静态路由分为明细路由和默认路由；默认路由的优先级是最低的（其他所有的明细路由都没有匹配的时候，才会匹配默认路由）。 （5）在路由器上，开启回环口模拟PC，一般用来做测试。 ​ int lo0 ​ ip add 192.168.1.1 255.255.255.0 ​ no sh 2.路由器的工作原理：mac地址是一个二层的概念，不能跨网段。 源目Ip地址不变，源目mac地址被重写。 3.传输层：把数据包转换为数据段，为数据提供可靠或不可靠的传输；为应用程序提供端到端的服务。 （1）可靠指TCP协议；不可靠指的是UDP协议。 （2）端是指端口（后门） ​ netstat -an //查看本地开放的端口号和TCP的状态信息 ​ 协议 本地地址 外部地址 状态 ​ TCP 0.0.0.0:135 0.0.0.0:0 LISTENING //监听状态，端口处于开放状态 ​ TCP 192.168.120.171:50093 23.46.220.16:443 ESTABLISHED //表示TCP三次握手已经建立完成。 ​ LISTENING（listening） ​ ESTABLISHED （三次握手建立完成） （3）数据段：4层协议（TCp/UDP+端口号）+Data （4）PDU（Protocol Data Unit）：协议数据单元，数据在每一层传输的基本单位 （5）端口号的范围：0——65535，1——1024是知名端口 TCP23————Telnet，明文传输​ TCP22————SSH，加密传输 ​ TCP3389————远程桌面RDP服务 ​ TCP 21/20——————FTP（21是用来建立连接的，20是用来传输数据的） ​ TCP80——————web服务器（http协议）；https（TCP443） ​ TCP445————Windows的共享 ​ TCP25——————SMTP（简单邮件传输协议），用来发送邮件 ​ TCP110————POP3（邮局协议版本3），用来接收邮件 ​ TCP3306————MySQL服务 ​ UDP53——————DNS服务（如果是客户端请求服务器来解析的话，使用的是UDP-53；如果是DNS主备服务器之间做数据同步，使用的是TCP-53） ​ UDP67,68————DHCP服务 ​ UDP123————NTP（网络时间协议），是Linux中用于同步时间的。 4.TCP：是可靠的传输方式；所有的web页面都是基于TCP的。 （1）TCP传输数据之前，先建立连接的； （2）TCP传输数据的时候，会给每个数据做一个编号（sequence 序列号），以保障数据的可靠性。 （3）TCP是全双工的协议，同一时间可以上传和下载。 5.TCP的报文结构： （1）第一列：源目端口号 （2）第二列：序列号（发送端给每个数据进行编号） （3）第三列：确认号（用来对发送端的数据做确认）=====》保障数据传输的可靠性 （4）第四列：包含Flag位（标志位），用来描述这个报文的功能。 ​ SYN=1，表示想建立连接。 ​ ACK=1，表示报文是用来回复的。 ​ FIN=1，表示想拆除连接。 6.基于TCP三次握手的攻击 （1）SYN攻击：攻击者向服务器发送大量的“伪造请求报文”，服务器会向“假的请求者”去建立邻居关系； ​ 但实际上，这些“主机”根本没有请求服务器建立连接，导致服务器一直处于半连接状态。 ​ 如果连接的数量过多，会导致服务器资源消耗严重，甚至死机。 （2）LAND攻击：攻击者伪造报文，让服务器自己和自己建立连接，导致服务器资源消耗严重。 7.UDP（User Datagram Protocol ）：用户数据报协议；是一种不可靠的传输协议。 标志位 SYN=1，表示想建立连接。 ​ ACK=1，表示报文是用来回复的。 ​ FIN=1，表示想拆除连接 ​]]></content>
      <tags>
        <tag>路由协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础四]]></title>
    <url>%2F2019%2F10%2F24%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%9B%9B%2F</url>
    <content type="text"><![CDATA[1.4静态路由1.网络层：把数据帧转换为数据包，实现基于IP地址的寻址和转发。 网络层的设备：路由器 网关的作用：当PC想跨网段通信的时候，所有不知道的数据包，都交给网关来处理。 2.路由器的作用： ​ （1）实现不同网段的通信； ​ （2）隔离广播域； ​ 路由器的每个接口=一个网段=一个广播域 ​ （3）为数据包寻找一条最优路径。 3.路由器的工作原理：源目IP地址不变，源目mac地址被重写。 注意：mac地址（全球唯一性）是二层的概念，是不能跨网段的。 当PC1（192.168.1.1）—-PC3（192.168.2.1）通信的时候 （1）PC1先查看自己的ARP表；如果有就直接发送；如果没有，就需要进行判断。 ​ PC1先判断目标主机和自己是否在相同的网段： ​ 如果在同一个网段，直接发送ARP请求（广播）； ​ 如果没有在相同的网段，就要把数据包发送给网关； ​ Source源： 192.168.1.1 PC1的mac地址 ​ Destination目标：192.168.2.1 PC1网关的mac地址 （2）路由器：根据目标mac地址判断是不是找我的，是找我的我就回复；不是找我的，我就丢弃。 ​ 如果是找我的，我就把数据帧还原成数据包，根据目标IP地址查看“路由表”，做转发。 ​ 路由器把到达192.168.2.1的数据包从f0/1接口发送出去。 ​ Source： 192.168.1.1 PC3网关的mac ​ Destination： 192.168.2.1 PC3的mac地址 （3）PC3的反应；给PC1回复数据包。 ​ Source： 192.168.2.1 PC3的mac地址 ​ Destination目标：192.168.1.1 PC3的网关mac （4）路由器：目标Mac是找我的，我就“拆包”，看到里边的目标Ip； ​ 根据目标IP进行路由表的查找，从相应接口发送出去。 ​ Source： 192.168.2.1 PC1的网关mac ​ Destination目标：192.168.1.1 PC1的mac地址 4.常用配置： （1）交换机的远程登录配置： ​ 第一步：配置IP ​ SW1(config)#int vlan 1 ​ SW1(config-if)#ip add 192.168.1.100 255.255.255.0 ​ SW1(config-if)#no sh ​ SW1(config-if)#exit ​ 第二步：配置telnet ​ SW1(config)#line vty 0 4 ​ SW1(config-line)#pass ​ SW1(config-line)#password 123456 ​ SW1(config-line)#login ​ SW1(config-line)#exit ​ 第三步：配置特权模式的密码 ​ SW1(config)#enable password 123456 ​ SW1(config)#no ip domain lookup //关闭域名解析 ​ SW2(config)#ip default-gateway 192.168.2.254 //给交换机配置网关，实现跨网段通信 ​ 常用排错命令： ​ R1(config)#do show ip int bri //查看接口状态和IP ​ R1(config)#do show ip route //查看路由表 ​ R1(config)#do show run //查看当前配置 ​ （2）路由器的telnet配置： ​ 第一步：给路由器接口配置IP ​ R1(config)#int f0/0 ​ R1(config-if)#ip add 192.168.1.254 255.255.255.0 ​ R1(config-if)#no sh ​ 第二步：配置telnet ​ R1(config)#line vty 0 4 ​ R1(config-line)#password 123456 ​ R1(config-line)#login ​ R1(config-line)#exit ​ R1(config)#enable password 123456 ​ （3）路由器接口是三层接口，可以直接配置IP； ​ Router(config)#int f0/1 ​ Router(config-if)#ip add 192.168.2.254 255.255.255.0 ​ Router(config-if)#no sh ​ （4）查看路由表： ​ Router(config-if)#do show ip route ​ C 表示connected，直连路由，成立的条件只要接口处于up状态，路由器就会自动把直连路由加载到路由表里。 ​ （5）清空配置： ​ erase startup-config //清空当前配置 ​ reload //重启后才生效 5.路由协议：路由器之间交流使用的语言。 路由协议分为动态路由协议和静态路由协议（由管理员来配置）。 基本格式： ip route 目标网段 目的子网 下一跳（直连链路的对端地址） （1）配置IP ​ int f0/0 ​ ip address 192.168.1.254 255.255.255.0 ​ no sh （2）配置路由： ​ 查看路由表：do show ip route ​ 配置路由：ip route 0.0.0.0 0.0.0.0 下一跳 （3）检查路由表； 如果不通，逐跳ping测试。 tracert 192.168.7.1 //路由追踪，可以显示数据包沿途经过的设备]]></content>
      <tags>
        <tag>静态路由</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础三]]></title>
    <url>%2F2019%2F10%2F24%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E4%B8%89%2F</url>
    <content type="text"><![CDATA[1.3 网络层1.网络层：把数据帧转换为数据包，实现基于Ip地址的寻址和转发。 数据帧：在数据外边加入二层头部（帧头和帧尾） ​ Dmac（6Byte）+Smac（6Byte）+Type（2Byte）+Data +FCS（4Byte，帧尾） 数据包：三层IP头部+数据 2.IP头部：标准长度是20Byte。 TTL：time to live 生存时间，是一个三层防环机制，可以限制一个数据包在网络中传输的时间。 ​ 数据包每经过一个三层设备（路由器），他的TTL值就会减1，如果TTL=0，那么这个数据包就不能继续传输，会被丢弃。 ​ 每经过一个三层设备，叫做1跳。 Protocol：用来标识上层协议，如果是UDP=17；TCP=6；ICMP=1. Source IP Destination IP 3.ARP：Address Resolution Protocol地址解析协议，用来根据Ip地址解析mac。 ARP报文分为2类：ARP请求报文Request；ARP响应报文Reply。 ARP请求报文是以广播的形式发送；ARP响应报文是以单播的形式回复。 arp -a //查看arp缓存信息 arp -d //清除ARP缓存 4.ICMP：（Internet Control Message Protocol）互联网控制报文协议，是一个“错误侦测与回馈机制”，用来测试网络连通性。 ICMP报文类型分为2种：Request请求报文和Reply回复报文。 ping是一个工具/命令，利用的是ICMP协议。 ping的常用参数： ping www.baidu.com -t //长ping，只能按Ctrl+C停止 ping -a 192.168.120.250 //-a解析主机名 ping -l 1000 www.baidu.com //-l指定测试数据包的大小；指定为1000个字节 ping -n 6 www.baidu.com //-n指定发送数据包的个数为6 ping -i 5 www.baidu.com //-i指定TTL值（每经过一个路由器减1，如果TTL=0就不能再继续传输） ping -l 1501 -f www.baidu.com //指定发送的数据包为1501，-f表示不允许分片 5.ARP欺骗:交换机的工作原理是广播，对用户的身份没有验证功能。 ARP欺骗：欺骗所有主机（告诉所有客户端假的网关mac地址）；中间人攻击（欺骗两个通信主机，获取他们的通信数据）。 （1）实验说明： ​ 3台虚拟机，连接到VMNET1, ​ windows7(客户端)——&gt;攻击者——&gt;server 2008 ​ 192.168.1.1 192.168.1.2 192.168.1.3 ​ 修改各个主机的Ip地址，并且测试是否能通信。（注意防火墙的问题） （2）在攻击者的主机上安装Cain软件 ​ Cain——————&gt;Sniffer————&gt;开始嗅探————&gt;右键————&gt;Scan mac address ​ 下边ARP——————&gt;加号——————&gt;找左边是欺骗对象，右边是欺骗的条————&gt;左 上角低三个黄色图标，开始ARp欺骗。 （3）在Server 2008 上安装FTP并配置 ​ 第一步：添加角色——————&gt;WEB服务——————&gt;FTP服务 ​ 第二步：创建目录ftproot，目录下创建两个文件夹 ​ down ​ up ​ 第三步：创建对应的用户，mengzhu和tianxiao ​ 第四步：编辑文件夹的权限，并设置mengzhu给予下载权限；tiaoxiao给予上传的权限。 ​ 第五步：在IIS里创建FTP站点即可。 （4）在Windows 7 （客户端）进行访问并测试 ​ 在攻击者的主机上，查看是否有passwords（左下角第4个），如果有密码就证明获取密码成功。 6.Telnet：远程登录管理方式，使用的端口号是TCP-23。 （1）在2008里添加“功能”—–》telnet服务端和客户端 （2）使用services.msc 打开服务，开启telnet （3）在Windows7上使用命令行来登录telnet ​ telnet 192.168.1.3 ​ d: //切换到d盘 ​ echo 123456 &gt; telnet.txt //在被控制主机上创建一个文件 ​ type telnet.txt //查看telnet文件内容 ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​]]></content>
      <tags>
        <tag>网络层</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础二]]></title>
    <url>%2F2019%2F10%2F24%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[1.2 数据链路层1.OSI七层模型： （1）物理层：定义了终端设备的传输介质，传输的是bit流。 （2）数据链路层：把bit转换为数据帧，实现基于mac地址的寻址和转发 （3）网络层：把数据帧转换为数据包，实现基于IP地址的寻址和转发 （4）传输层：把数据包转换为数据段，为数据提供可靠或者不可靠的传输，为应用程序提供端到端的服务 （5）会话层：建立、维持和管理、终止会话 （6）表示层：数据的表现形式，比如压缩、加密、 （7）应用层：为用户提供服务。 2.数据链路层：把bit转换为数据帧，实现基于mac地址的寻址和转发 （1）Mac地址：是由48 bit的二进制数组成，为了读写方便，用十六进制表示。 ​ 其中前24bit表示厂商信息，后24位表示设备信息，由厂家自定义。 ​ mac地址是由厂家出厂的时候直接烧录到网卡里，一般情况下不能修改。 （2）Mac地址的分类： ​ 单播mac：如果一个Mac地址的第8bit是0，那么这个mac地址表示单播mac。 ​ 组播mac：如果一个Mac地址的第8bit是1，那么这个mac地址表示组播mac。 ​ 广播mac：全FF-FF-FF-FF-FF-FF （3）数据帧格式：EthernetII数据帧 ​ 二层数据帧最大1518Byte == 6Byte的Dmac+ 6Byte Smac+ 2Byte（Type字段：标识上层协议） + 数据Data（最大1500Byte） +4Byte（帧校验：FCS） 3.交换机的工作原理： 4.真实设备连接： （1）设备的console口————console线————PC的USB口 （2）在真机里安装USB-COM口的驱动 （3）计算机——管理——设备管理——端口，找到驱动起来的接口编号 （4）真机里安装远程管理的软件：Xshell/SecureCRT/Putty 5.交换机的组成： （1）CPU：用于运算和控制 （2）ROM：Read Only Memory，只读存储，存储的系统的引导文件====》类似于引导分区 （3）RAM：Random Access Memory，随机存储，相当于内存====》running-config （4）Flash：闪存，用于存放IOS（路由器或者交换机的系统）系统，也可以存放用户数据。=====》类似于C盘。 （5）NVRAM：非易失性存储，为数据做永久存储。=====》类似于硬盘。 6.交换机的常见模式： ​ Switch&gt;en //用户模式，只能使用一些简单的命令；不能查看当前配置。 ​ Switch# //特权模式，可以使用比较多的查看命令。 ​ Switch#conf t //全局配置模式，修改交换机的配置 ​ Enter configuration commands, one per line. End with CNTL/Z. ​ Switch(config)# ​ 退出模式：exit ​ 直接退到特权模式：end == Ctrl + z ​ 快捷键：ctrl+a 移动到行首 ​ ctrl+e 移动到行尾 ​ ctrl+u 清空行 ​ Ctrl+shift+6 ​ 7.特权模式常用命令： 所有的show命令都可以在特权模式下直接使用；如果是其他模式，要加do。 （1）Switch#show ip interface brief ==show ip int bri //查看所有接口的状态和配置 Status表示接口的物理状态，是否手动就行了修改；Protocol表示链路的协商状态是否正常。 说明：只有2个状态都是up的时候才是正常的。 Interface IP-Address OK? Method Status Protocol ​ FastEthernet0/1 unassigned YES manual up up （2）show int f0/6 // 接口支持简写，fastethernet简写为f0/1 ;Ethernet简写为 e0/1;Gi 简写为g0/1; ​ 查看物理接口的双工和速率 ​ Full-duplex, 10Mb/s //duplex表示双工模式，如果是Full表示全双工；如果是half表示半双工；如果是auto表示自适应。 （3）修改接口的双工和速率 ​ enable ​ conf t ​ int f0/1 ​ speed 10/100/auto //修改接口的速率 ​ duplex half/full/auto //修改接口的双工模式 （4）SW1#show mac-address-table //查看mac地址表，Type类型为Dynamic，表示交换机自己学到的。 ​ SW1#clear mac-address-table #清空mac地址表 （5）其他命令： ​ SW1#clock set 17:07:30 May 14 2019 #设置时间：时分秒，月日年 ​ SW1#show history #查看命令历史 ​ SW1#show running-config #查看交换机当前配置，还没有保存（重启就失效；只是写入了“内存”）(**) ​ SW1#write #保存配置 ​ Building configuration… ​ [OK] ​ SW1#copy running-config startup-config #把running里的配置保存到开机启动配置文件里 ​ SW1#show startup-config #交换机每次开机的时候会自动加载的配置（重启仍然有效；写到了“硬盘”中，做永久存储） ​ SW1#reload #重启 8.远程登录的配置： （1）设备管理——本地管理和远程管理（通过网络来管理设备，常用的方式有Telnet、SSH、远程桌面、远程协助、Team View等） （2）远程管理的步骤： ​ 第一步：给交换机配置IP ​ SW1(config)#interface vlan 1 //进入虚拟接口； ​ SW1(config-if)#ip address 192.168.1.100 255.255.255.0 //配置IP ​ SW1(config-if)#no sh //激活接口 no shutdown ​ 第二步：配置telnet ​ SW1(config)#line vty 0 4 #0表示第1个虚拟接口；4表示最多允许登录人数 ​ SW1(config-line)#password 123456 #设置远程登录的密码 ​ SW1(config-line)#login #激活 ​ 第三步：进入特权模式的密码 ​ SW1(config)#enable password 123456 #password表示的明文密码 ​ SW1(config)#enable secret 123456 #secret表示密文的密码；如果两个都存在，那么密文生效 （3）给console口做安全配置===》本地的安全 ​ SW1(config)#line console 0 ​ SW1(config-line)#exec-timeout 0 0 #设置超时时间，第一个0表示分钟；第二个0表示s；0 0 表示永不超时（仅限于实验环境） ​ SW1(config-line)#password console #设置console的登录密码 ​ SW1(config-line)#logging synchronous #设置光标跟随，不让命令被日志信息打断 ​ SW1(config-line)#login #激活 ​ SW1(config)#no ip domain-lookup #关闭域名解析 ​ SW1#erase startup-config #清空所有配置 （4）其他命令 ​ SW1(config)#do copy r s== do write #保存 ​ Switch#show version #查看系统版本 （5）ssh配置 ​ 开启SSH（基于本地用户进行身份验证）： ​ conf t ​ hostname SW1 //设置主机名 ​ username test password 密码 //设置登录的用户名和密码 ​ ip domain-name www.test.com //配置域名，域名用来生成公钥和私钥 ​ crypto key generate rsa //生成一对rsa算法的公钥和私钥 ​ line vty 0 4 ​ transport input ssh/all ​ login local ​ exit ​ ssh -l test 192.168.1.254 //在模拟PC上使用ssh连接设备 ============================================================================= destination 目标 Source 源 Current 当前 configuration 配置 Status 状态 Protocol 协议 Dynamic 动态 minutes 分钟 seconds 秒 generate 生成]]></content>
      <tags>
        <tag>2.1 数据链路层</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础一]]></title>
    <url>%2F2019%2F10%2F18%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E4%B8%80%2F</url>
    <content type="text"><![CDATA[1.1 OSI七层模型及基础ISP:运营商，电信、移动、联通 IEEE：国际电子电气工程师协会，致力于电气、电子、计算机工程和与科学有关的领域的开发和研究，在太空 ISO（国际标准化组织） 网络设备：交换（实现相同网段通信）和路由器（找路，实现不同网段通信） IP：标识网络中任意一台主机的位置（收发件人的地址） 1.网络：两个不在同一地理位置的主机，通过传输介质和通信协议，以实现资源共享和数据传输。 （1）传输介质： （2）通信协议：“语言”，设备之间交流使用的语言叫做“协议” （3）资源共享：文本类、视频、音频、图片等 （4）终端：笔记本、台式机、平板、手机等 2.网络的分类：按照范围分 （1）WAN（Wide Area Network）：广域网，典型代表Internet，还有VPN（虚拟私有网络–“隧道”） （2）LAN(Local Area Network)：局域网，“内网”，比如：家庭网、企业网、园区网等 （3）MAN：城域网 3.网络拓扑：是一个网络的架构描述；方便管理和查看网络结构。 星型：组网灵活、方便扩展和管理；但是中心节点一旦发生故障，就会全网瘫痪。 全网型拓扑：每个设备都和其他设备相连，任意一个节点坏掉都不影响其他设备的通信。 ​ 缺点：成本太高。 部分网状型：有2个（或以上）性能比较好的设备来做“冗余（多余）”，防止网络故障。 4.OSI七层参考模型：由ISO组织提出的OSI七层模型。 最开始的网络厂商是不兼容的，不能直接对接。 为了促进各厂商的融合，ISO组织提出了OSI（Open System Interconnection，OSI）七层模型 OSI七层就是定义了数据在传输过程中如何进行“封装”（打包）和“解封装”（拆包） （1）物理层：定义了终端设备的传输介质。传输的是bit流。 （2）数据链路层：把bit流转换为数据帧，实现基于mac地址的寻址和转发。 （3）网络层：把数据帧转换为数据包，实现基于IP地址的寻址和转发。 （4）传输层：把数据包转换为数据段，为数据提供可靠或者不可靠的传输；为应用程序提供端到] 端 的服务。 ​ netstat -an //查看端口和连接情况 （5）会话层：用来建立、维持、管理和终止会话 （6）表示层：数据的表现形式，比如加密和压缩 （7）应用层：为用户提供服务。 5.TCP/ip模型：也叫做TCP/IP协议栈。可以说是4层，也可以说是5层 4层： 网络接口层：物理层和数据链路层 网络层：把数据帧转换为数据包，实现基于IP地址的寻址和转发。 传输层：把数据包转换为数据段，为数据提供可靠或者不可靠的传输；为应用程序提供端到端的服务。 应用层：把会话、表示层和应用层合并为一层。 物理层 1.物理层：定义了终端设备的传输介质。传输的是bit流。 常见的物理介质：网线、光纤、同轴线缆 2.以太网中的术语 （1）广播：一对多；讲课 （2）组播：一对多，只有同一组里的主机才能接收到；群聊 （3）单播：一对一 （4）全双工：同一时刻，可以同时进行发送（上传）和接收（下载），比如手机 （5）半双工：同一时刻，只能发送或者接收数据，比如对讲机 （6）单工：只能进行单向传输，比如收音机 （7）冲突域：一个冲突影响的范围就是冲突域。 （8）广播域：一个广播影响的范围就是广播域。 3.同轴线缆：传输速度快，但是只有一根芯，半双工的工作模式。 应用：电视、监控等 同轴线缆：100Base-2（细线，理论上可以传输185m）和100Base-5（粗线，理论上可以传输500m） 4.光纤：单模光纤和多模光纤 单模光纤：只能传输一种光，传输距离更远 多模光纤：可以传输多种光。 5.网线：在以太网中常见的传输介质，网线的理论值能传输100M。 （1）从结构上来分：屏蔽双绞线（有锡纸，适合室外布线）和非屏蔽双绞线（适合室内布线） （2）从传输速率来分： ​ CAT5:5类线，传输速率的100M（百兆以太网） ​ cat6:6类线，传输速率为1000M（千兆以太网） ​ CAt7:7类线或者超6类，传输速率为10G（万兆以太网） （3）按照网线的排序：T568A和T568B ​ T568B：橙白、橙、绿白、蓝、蓝白、绿、棕白、棕 ​ T568B在100M以太网中，使用了4根，1,2用于发送；3,6用于接收。 ​ T568A是1,3对调；2,6对调； （4）按照一根线的两端网线的连接方式： ​ 如果一根线的两端都是T568B，这种线叫做“直通线”——————不同种设备之间用直通线 ​ 如果一根线一端是T568B，一端是T568A，这种线的连接方式叫做“交叉线”————同种设备之间用交叉线 ​ 全反线，也叫做Console线，用来对设备进行配置。 6.不管是什么传输介质，在传输数据的时候，信号都会出现衰减，这个时候需要使用设备来延长信号的传输距离。 物理层的设备：hub（集线器），只能识别bit流。 ​ 由于内部是总线型结构，网络的传输效率特别低。 ​ hub没有学习功能； ​ hub的每个接口都是一个冲突域； 带宽：单位时间内传输数据的速度 ​ 默认单位：bit/s ​ 计算机最开始的时候只能识别0和1.每个0或1就是一个bit（位）。 ​ 为了方便计算机读取，把每 8 bit==1 Byte（容量单位）。 ​ 1Byte=8bit ​ 1KB==1024B ​ 1MB=1024KB ​ 1GB=1024MB ​ 1TB=1024GB ​ 一个2G（GB）电影，使用100M（bit/s）的带宽，需要多长时间下载完成？ ​ 2*1024=2048MB ​ 100/8=12.5B/s ​ 2.73min 1.进制： 二进制B ： 0 1 八进制O ： 0 1 2 3 4 5 6 7 十进制D ： 0 1 2 3 4 5 6 7 8 9 十六进制H ：0 1 2 3 4 5 6 7 8 9 A（10） B（11） C（12） D（13） E（14） F（15） 2.把1-F转换为二进制： 十六进制 二进制 0 0 1 1 2 10 3 11 4 100 5 101 6 110 7 111 8 1000 9 1001 10 1010 11 1011 12 1100 13 1101 14 1110 15 1111 3.十进制转其他进制：短除法 把这几个数转换为二进制 128=10000000 192=11000000 224=11100000 240=11110000 248=11111000 252=11111100 254=11111110 255=11111111 2的0次方=1 2的1次方=2 2的2次方=4 2的3次方=8 2的4次方=16 2的5次方=32 2的6次方=64 2的7次方=128 2的8次方=256 2的9次方=512 2的10次方=1024 十进制转八进制： 479 640 1200 1200 2260 1024 2000 512 1000 十进制转十六进制： 1600 640 3216 C90 4801 12C1 2048 800 4.其他进制转十进制：乘法 十六进制：ABC B00 八进制： 501 234 二进制： 1 0 1 0 1 0 0 0 =168 ​ 128 64 32 16 8 4 2 1 ​ 5.IP地址：分别是Ipv4和Ipv6. （1）其中IPv4是由32位的二进制数组成，为了读写方便，用点分十进制表示。IPV4的地址空间是42亿。 ​ IPv6是由128位的二进制数组成，为了读写方便，用冒号分十六进制表示。 （2）IPv4中按照用途把地址分为2大类：公网地址和私网地址 ​ 公网地址：是互联网上使用，具有全球唯一性。 ​ 私网地址：在以太网中可以重复使用。 ​ 10.0.0.0————10.255.255.255 子网掩码：255.0.0.0（简写10.0.0.0/8，这里的8代表子网中“1”的个数） ​ 172.16.0.0————172.31.255.255 子网掩码：255.255.0.0 ​ 192.168.0.0————192.168.255.255 子网掩码：255.255.255.0 （3）IP地址的分类： ​ A类：1——126，默认子网掩码是255.0.0.0；地址范围：1.0.0.0————126.255.255.255 ​ B类：128——191，默认子网掩码是255.255.0.0；地址范围：128.0.0.0————191.255.255.255 ​ C类：192——223，默认子网掩码是255.255.255.0；地址范围：192.0.0.0————223.255.255.255 ​ D类：224——239，用于组播 ​ E类：240——255，用于科研 （4）子网掩码：用来标识Ip地址中的网络位和主机位的。 ​ 网络位：在Ip地址中，与子网掩码“1”（二进制）对应的是网络位 ​ 主机位：在Ip地址中，与子网掩码“0”（二进制）对应的位是主机位。 ​ 网络地址：在Ip地址中，如果“主机位”全为0，这个地址就是网络地址。====》路由器找路的时候使用 ​ 广播地址：在Ip地址中，如果“主机位”全为1，这个地址就是广播地址。====》同一个网络中广播的时候使用 ​ 说明：网络地址和广播地址不能直接在网络中进行配置。 ​ ​ 如何判断两个IP地址是否在同一个网段？——————网络位相同的IP地址是同一个网段（交换机）； ​ ​ 192 . 168. 120.171 ​ 255 . 255. 255.0 ​ 11111111.11111111.11111111.00000000 ​ ​ 北京市昌平区二拨子 博纳电气蓝鸥科技2楼 （5）举例： ​ 100.1.1.2和110.24.25.20 ​ 255.0.0.0 ​ 99.45.67.8和99.59.58.9 ​ 255.0.0.0 ​ 192.168.110.10和192.168.200.10 ​ 255.255.255.0 ​ 172.16.30.1和172.16.200.1 ​ 255.255.0.0 ​ 200.10.10.10和200.10.20.10 ​ 255.255.255.0 ​ 6.家用路由器的基本功能； （1）路由的功能：为数据包寻找一条最优路径；————找路 （2）地址转换功能：把私网地址转化为公网地址；————WAN口（宽带的用户名和密码校验成功，才会给用户分配公网Ip） （3）DHCP功能：为客户端分配Ip/子网/网关/DNS ​ ​]]></content>
      <tags>
        <tag>OSI七层模型及基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(四)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E5%9B%9B%2F</url>
    <content type="text"><![CDATA[程序安装及管理一、应用程序基础 将软件传到LINUX中 yum install lrzsz （注意：LINUX要能连入互联网，ping www.qq.com）/) 应用程序与系统命令的关系 文件位置 系统命令：一般在/bin和/sbin目录中，或为Shell内部指令 应用程序：通常在/usr/bin和/usr/sbin目录中 主要用途 系统命令：完成对系统的基本管理工作，例如IP配置工具 应用程序：完成相对独立的其他辅助任务，例如网页浏览器 适用环境 系统命令：一般只在字符操作界面中运行 应用程序：根据实际需要，有些程序可在图形界面中运行 运行格式 系统命令：一般包括命令字、命令选项和命令参数 应用程序：通常没有固定的执行格式 典型应用程序的目录结构 文件类型 保存目录 普通执行程序文件 /usr/bin 服务器执行程序文件和管理程序文件 /usr/sbin 应用程序配置文件 /etc 日志文件 /var/log 应用程序文档文件 /usr/share/doc 应用程序手册页文件 /usr/share/man 常见的软件包封装类型 文件类型 保存目录 rpm软件包 扩展名为“.rpm” deb软件包 扩展名为“.deb” 源代码软件包 一般为“.tar.gz”、“.tar.bz2”等格式的压缩包，包含程序的原始代码 绿色免安装的软件包 在压缩包内提供已编译好的执行程序文——解开压缩包后的文件即可直接使用 Centos软件包管理 rpm软件包 RPM Redhat Package Manager 由 Red Hat 公司提出，被众多 Linux 发行版所采用 建立统一的数据库文件 详细记录软件包安装、卸载等变化信息 自动分析软件包依赖关系 RPM 软件包 软件素材参考：http://www.rpm.org 一般命名格式： 查询已安装的 RPM 软件信息 rpm -q[子选项] [软件名] 常用选项 -qa、-qi、 -ql、 -qf、-qc、-qd Rpm –qa查询所有安装的rpm软件包 Rpm –qi 查询已安装的某软件包的信息 Rpm –ql查询已安装的某软件包安装路径 查询未安装的 RPM 软件包文件中信息 rpm - qp[子选项] RPM包文件 常用选项 -qpi、-qpl、-qpc、-qpd 使用rpm 命令只能查询通过 RPM方式安装的软件包信息用，其他途径安装到系统中的软件包，rpm 命令将无法获取相关信息 安装或升级RPM 软件 rpm [选项] RPM包文件 … -i :在当前系统中安装一个新的RPM软件包 -e:卸载指定名称的软件包 -U:检查并升级系统中的某个软件包,若该软件包原来并未安装,曾等同于”-i”选项 -F:检查并更新系统中的某个软件包,若该软件包原来并未安装,则放弃安装 -h:在安装或升级软件包的过程中,以”#”号显示安装进度 -v:显示软件安装过程中的详细信息 –force:强制安装某个软件包,当需要替换已安装的软件包及文件,或者安装一个比当前使用的软件版本更旧的软件时,可以使用此选项 –nodeps:在安装或升级,卸载一个软件包时,不检查与其他软件包的依赖关系 常用选项 -i、 -U、 -F 安装 升级 强制 -vh显示安装进度 rpm -ivh 软件包 卸载指定的RPM软件 rpm -e 软件名 辅助选项 –force、–nodeps、-h、-v、 重建RPM 数据库 [root@localhost ~]# rpm –rebuilddb 或 [root@localhost ~]# rpm –initdb 导入验证公钥 root@localhost ~]# rpm –import /media/cdrom/RPM-GPG-KEY-redhat-release 解决软件包依赖关系方法 安装有依赖关系的多个软件 卸载有依赖关系的多个软件 忽略依赖关系 结合“–nodeps”选项，但可能导致软件异常 源代码编译概述 使用源代码安装软件的优点 获得最新的软件版本，及时修复bug 根据用户需要，灵活定制软件功能 应用场合举例 安装较新版本的应用程序时 当前安装的程序无法满足需要时 需要为应用程序添加新的功能时 源代码编译过程 二、YUM安装软件 YUM，Yellow dog Updater Modified 基于RPM包构建的软件更新机制 可以自动解决依赖关系 所有软件包由集中的YUM软件仓库提供 软件仓库的提供方式 FTP服务：ftp://…… HTTP服务：http://…… 本地目录：file:///……. RPM软件包的来源 CentOS发布的RPM包集合 第三方组织发布的RPM包集合 用户自定义的RPM包集合 构建CentOS 7 软件仓库 RPM包来自CentOS 7 DVD光盘 通过FTP、HTTP或本地目录提供给客户机 在软件仓库中加入非官方RPM包组 包括存在依赖关系的所有RPM包 使用createrepo工具建立仓库数据文件 YUM缓存目录 存放下载的软件包、仓库信息等数据 位于/var/cache/yum/$basearch/$releasever [root@localhost ~]# yum clean all 为客户机指定YUM仓库位置 配置文件：/etc/yum.repos.d/*.repo [root@localhost ~]# vi /etc/yum.repos.d/centos7.repo [base] name=CentOS 7.5 baseurl=ftp://192.168.4.254/centos7 enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 [other] name=Other RPM Packages baseurl=ftp://192.168.4.254/other enabled=1 gpgcheck=0 直接以CentOS 7 光盘作软件仓库 将CentOS 7 光盘放入光驱 指定仓库位置，URL地址为 file:///media/cdrom [root@localhost ~]# vi /etc/yum.repos.d/local.repo …… [local] name=CnetOS 7.3 baseurl=file:///media/cdrom enabled=1 gpgcheck=0 关于yum命令 由软件包yum-3.4.3-150.el7.centos.noarch提供 用来访问YUM仓库，查询、下载及安装、卸载软件包 yum的配置文件 基本设置：/etc/yum.conf 仓库设置：/etc/yum.repos.d/*.repo 日志文件：/var/log/yum.log 查询软件包 yum list [软件名]… yum info [软件名]… yum search &lt;关键词&gt;… 查询软件包组 yum grouplist [包组名]… yum groupinfo &lt;包组名&gt;… 安装软件 yum install [软件名] yum groupinstall &lt;包组名&gt; 升级软件 yum update yum groupupdate 卸载软件 yum remove &lt;软件名&gt;… yum groupremove &lt;包组名&gt;… yum安装: yum源配置文件所在位置:/etc/yum.repos.d/ 注意:此目录下有许多.repo的配置文件,可以全部移走,然后自己创建一个XXX.repo的源文件 编辑XXX.repo的源文件 编辑内容: [名字] ——-自定义 Baseurl=file:///media ——定义yum源仓库为光驱的挂载点 enabled=1 ——-0 :关闭源 1表示开启源 Gpgcheck=0 ——0:不去校验包 1:校验包 效率低 保存退出 安装命令 Yum install 包名 源码包安装:（需要gcc） 下载源码包 解压源码包 tar zxvf 软件名.tar.gz -C /解压目录 ——–解压压缩文件到指定目录里面 配置 ./configure –prefix=/软件放置目录 ——-重新配置软件安装后文件存放的位置 编译 Make ———重新编译二进制 编译安装 Make install ——–编译安装]]></content>
      <tags>
        <tag>程序安装及管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(三)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%B8%89%2F</url>
    <content type="text"><![CDATA[文件操作一、文件内容查看 查看文件内容 cat 命令 cat命令 用途：显示出文件的内容 cat [选项] 文件名 … cat –n 文件名 显示文件内容同时显示行号 more命令 用途：全屏方式分页显示文件内容 交互操作方法 按Enter键向下逐行滚动 按空格键向下翻一屏 按q键退出 Ctrl+f 下翻 Ctrl+b上翻 more [选项] 文件名 … less 命令 用途：与 more 命令相同，但扩展功能更多 交互操作方法 Page Up 向上翻页，Page Down 向下翻页 按“/”键查找内容，“n”下一个内容，“N”上一个内容 其他功能与 more 命令基本类似 less [选项] 文件名 … tail命令 用途：查看文件结尾的少部分内容（默认为10行） tail -n 文件名 … 显示尾部指定行数 tail -f 文件名：动态观察文件变化 wc命令 用途：统计文件中的单词数量（Word Count）等信息 常用命令选项 -l：统计行数 -w：统计单词个数 -c：统计字节数 wc [选项]… 目标文件… wc -l /etc/passwd wc -l /var/log/secure grep命令（支持正则表达式） 用途：在文件中查找并显示包含指定字符串的行 常用命令选项 -i：查找时忽略大小写 -v：反转查找，输出与查找条件不相符的行 查找条件设置 要查找的字符串以双引号括起来 “^……”表示以……开头，“……$”表示以……结尾 “^$”表示空行 grep [选项]… 查找条件 目标文件 例如：grep -v “^#” /etc/yum.conf | grep -v “^$” Grep “^root” /etc/passwd 二、压缩命令gzip、bzip2 gzip命令、bzip2命令 用途：制作压缩文件、解开压缩文件 常用命令选项 -9、-d gzip [-9] 文件名… ——gzip工具压缩文件 bzip2 [-9] 文件名…—–bzip2工具压缩文件 gzip -d .gz格式的压缩文件 ——gzip工具解压文件 bzip2 -d .bz2格式的压缩文件——bzip2工具解压文件 请注意： gzip和bzip2命令使用的压缩算法各不相同 一般来说bzip2的压缩效率要好一些 gunzip 命令 gunzip 等价于 gzip –d gzip -d mkfile.gz 或 gunzip mkfile.gz bunzip2 命令 bzip2和bunzip2命令的用法与gzip、gunzip命令基本相同 tar命令 用途：制作归档文件、释放归档文件 tar [选项] … 归档文件名 源文件或目录 tar [选项]… 归档文件名 [-C 目标目录] 常用命令选项 -c、-x、-v、-f、-p、-t、 -C、-z、-j -c:创建.tar格式包文件 -C:解压时指定释放的目标文件夹 -f:表示使用归档 -j:调用bzip2程序进行压缩或是解压 -p:打包时保留文件及目录的权限 -P:打包时保留文件及目录的绝对路径 -t:列表查看包内的文件 -v:输出详细信息 -x:解压tar格式的包文件 -z:调用gzip程序进行压缩或是解压 压缩归档: Tar zcvf 自定义压缩后的文件名.tar.gz 压缩的对象 Tar jcvf 自定义压缩后的文件名.tar.bzip2 压缩的 对象 解压: Tar zxfv 压缩文件.tar.gz -C 解压后存放的目录 Tar jxvf 压缩文件.tar.bzip2 -C 解压后存放的目录]]></content>
      <tags>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(二)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[文本编辑器 vi 命令一、文件内容编辑 文本编辑器的作用 创建或修改文本文件 维护 Linux 系统中的各种配置文件 Linux中最常用的文本编辑器 vi：类UNIX操作系统的默认文本编辑器。 vim：vim是vi文本编辑器（一般简称为vi编辑器）的增强版本 vi vim 三种工作模式 命令模式、输入模式、末行模式 不同模式之间的切换 I插入式 a追加式 o插入新行后进行编辑 命令模式的基本操作 光标移动 复制、粘贴、删除 文件内容查找 撤销编辑及保存退出 末行模式的基本操作 保存文件及退出vi编辑器 打开新文件或读入其他文件内容 文件内容替换 vim kernel.txt (1)====&gt;命令模式:可以显示行号(:set nu ),可以查找信息(/word).支持上下左右键; 跳到行首^ 跳到行尾$ 跳到文档最开始:gg 跳到文档结尾:G 跳到某一行:10 //跳到第10行. yy //复制光标所在行 p //粘贴到光标所在行的下一行 dd //删除光标所在行 5yy //复制光标所在行开始向下的一共5行 d^ //删除光标所在行到行首 d$ //删除光标所在行到行尾 u //撤销操作 (2)====&gt;命令模式=====&gt;进入编辑模式:i (3)====&gt;命令模式=====&gt;进入编辑模式:i======&gt;末行模式Esc :wq //保存并退出 :q! //强制退出,不保存 :set nu //显示行号 /10 //查找文档中包含”10”的内容,跳转到下一个用n :w /test/test11/aaa.txt //把文件另存为aaa.txt :s/old/new/ //把光标所在行第一个old”替换为”new :s/old/new/g //把光标所在行所有的old”替换为”new :% s/old/new/g //把所有行的old”替换为”new :1,2 s/old/new/g //把第一行和第二行的old字符替换为new=====&gt;需要先执行set nu]]></content>
      <tags>
        <tag>文本编辑器 vi 命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(一)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[linux命令SHELL 文件位于/bin/bash cat /etc/shells常见的linuxshell有sh、bash、csh、tcsh、ash 其中bash shell是linux默认的shell 查看系统默认shell命令 echo $SHELL LINUX命令分类 内部命令 集成于 Shell 解释器程序内部的一些特殊指令，也称为内建（Built-in）指令 属于 Shell 的一部分 没有单独对应的系统文件 自动载入内存，可以直接使用 外部命令 Linux系统中能够完成特定功能的脚本文件或二进制程序 属于 Shell 解释器程序之外的命令 每个外部命令对应了系统中的一个文件 必须知道其对应的文件位置，由 Shell 加载后才能执行 注意Linux系统将存在外部命令、程序的目录默认添加到“搜索路径”中 当前使用位于这些目录中的外部命令时，用户不需要指定具体的位置。 Echo $PATH 通用的命令行使用格式 命令字 【选项】 【参数】 命令字 是整条命令中最关键的一部分 唯一确定一条命令 注意： Linux命令环境中，对英文字符的处理是区分大小写的 选项 短格式选项：使用“-”符号引导 多个单字符选项可以组合在一起使用 —-ls -a ls -l ls -al 长格式选项：使用“–”符号引导 参数 命令字的处理对象 可以是文件名、目录（路径）名或用户名等内容 个数可以是零到多个 编辑 Linux 命令行的辅助操作 Tab 键 反斜杠“\” —如果输入一行命令内容过长,终端会自动换行,也可以通过插入反斜杠\强制换行 Ctrl＋U 快捷键 ——-快速删除光标之前的所有字符内容 Ctrl＋K 快捷键—–快速删除从点前光标处到行尾的所有字符 Ctrl＋L 快捷键—–快速清空屏幕显示 Ctrl＋C 快捷键—-取消当前命令 如何获得命令帮助 问题 如何能快速、正确使用命令完成操作？ 取得帮助方法 使用help 命令 Help pwd 使用“–help”选项 使用man 手册页 (pageup pagedown翻页 q退出) help:大多数GNU工具都有–help 选项，用来显示工具的一些信息，用法 man:–(manual)显示系统的手册页,也就是查看帮助文档，如果系统没有文档，是不会显示这些帮助信息的，比help要详细 info:是一个基于菜单的超文本系统，是由GNU项目开发并由Linux发布，包括一些关于Linux Shell，工具，GNU项目开发程序说明文档,不但显示一些选项，还会有一些范例 注:一般man用的比较多，比help细，比info简单 目录和文件基本操作 pwd 命令 cd 命令 ls 命令 du 命令 显示当前的工作目录 Pwd 将用户的工作目录更改到其他位置 格式 cd 目标位置 cd ~ cd cd - 说明 切换到目标位置 若不指定目标位置，切换到当前用户的宿主目录 切换到上一次执行 cd 命令之前所在的目录 目录操作 绝对目录：从根目录开始的路径表示方式 相对目录：从当前目录开始的路径表示方式 示例：cd .. 相对路径表示法进入上级目录。 显示目录中内容，包括子目录和文件相关属性信息 ls [选项] [文件或目录… ] ls –l 标志 d代表目录 -代表文件 l代表链接 ls –a 连同显示隐藏文件，以.开头的文件或目录 ls –d 显示目录本身的信息 ls –h 以友好的表示方式显示信息 常用选项 -l 、 -a 、 -A 、 -d 、 -h 、 -g 、 –color 结合通配符 “?”：匹配文件名中的一个未知字符 “*”：匹配文件名中的任意多个字符 ls –color —在字符模式中颜色区分文件类型 深蓝色—-目录 白色——-文件 绿色—-可执行文件 黄色—设备文件 红色——压缩文件 通过别名机制简化常用的、比较长的命令 alias 命令别名 = 命令 设置myls 为ls – alh 的别名 alias myls = ‘ls – alh’ 永久保存定义别名的方式 编辑 ~/.bashrc —–个人配置文件 /etc/bashrc —–全局配置文件 alias la=’ls -a -l’ 统计指定目录（或文件）所占用磁盘空间的大小 du [选项] [文件或目录… ] 选项 -a -h -s 示例 统计磁盘空间占用时包括所有的文件，而不仅仅只统计目录 显示出目录或文件的大小（K、M），默认的大小单位为字节（KB） 只统计每个参数所占用空间总的大小，而不是统计每个子目录、文件的大小 df –h显示剩余磁盘空间 mkdir 创建新的空目录 rmdir 删除一个目录 mkdir [选项] 目录位置及名称 -p：一次性创建嵌套的多层目录 Rmdir删除子目录时，必须是空的。 创建空文件 – touch 更新文件的时间标记 经常用于创建多个新的空文件 touch 文件… 创建链接文件 – ln 为文件或目录建立链接文件 文件类型 软链接，又称符号链接（理解为快捷方式） 硬链接ln [-s] 源文件或目录… 链接文件或目标位置 软链接-s 硬链接 删除原始文件后 失效 仍旧可用 使用范围 适用于文件或目录 只可用于文件 保存位置 与原始文件可以位于不同的文件系统中 必须与原始文件在同一个文件系统（如一个Linux分区）内 取消软链接 Unlink 链接名 如：unlink aa1.txt 查找指定inode号的硬链接文件 ll –i find / -inum 16810953 将需要复制的文件或目录（源）重建一份，并保存为新的文件或目录 cp [选项]… 源文件或目录… 目标文件或目录… 选项 说明 -f 覆盖目标同名文件或目录时不进行提醒，直接强制复制 -i 覆盖目标同名文件或目录时提醒用户确认 -p 复制时保持源文件的权限、属主及时间标记等属性不变 -r 复制目录时必须使用此选项，表示递归复制所有文件及子目录 注意： 复制多个文件或目录时，目标位置必须是目录，且目标目录必须已存在 复制文件的样式 Cp 文件名 子目录中 如：cd /root cp initial-setup-ks.cfg a1 cp 文件名 新文件名 在当前目录复制出一个新文件 支持通配符*？ 复制一个目录及里面所有文件到另一个目录中 Cp –r b3 b34 删除指定的文件或目录 rm [选项] 要删除的文件或目录… 常用选项 -f(强制)、-i（友好提示）、-r（连同子目录） 其中rf可以组合使用 猜一猜：下面命令实现的功能 rm -rf public_html/grub/ rm -i public_html/apg.conf 注意： 不要直接删除系统中已有的目录或配置文件，以避免出现意外故障 移动文件或目录mv mv [选项] … 源文件或目录… 目标文件或目录 将指定的文件或目录转移位置 如果目标位置 与源位置相同，则相当于执行重命名操作 mv mytouch mkfile mv mkfile public_html/ 查找命令/文件存放目录 搜索范围由环境变量 PATH 决定（echo $PATH ） which 命令|程序名 which -a 命令|程序名 查找文件或目录-find 采用递归方式，根据目标的名称、类型、大小等不同属性进行精细查找 find [查找范围] [查找条件表达式] 查找类型 关键字 说明 按名称查找 -name 根据目标文件的名称进行查找，允许使用“”及“?”通配符 find / -name “.txt” -print #在当前目录中中查.txt文件并显示 find . -name “[A-Z]*” -print #在当前目录中查以大写字母开头的文件并显示 按文件大小查找 -size 根据目标文件的大小进行查找 一般使用“＋”、“-”号设置超过或小于指定的大小作为查找条件 常用的容量单位包括 kB（注意 k 是小写）、M、G find . -type f -empty #查找大小为0的文件或空目录 find . -type f -size +1000000c -print #查长度大于1Mb的文件 find . -type f -size +2k#搜索当前目录下大于2KB的文件 按文件属主查找 -user 根据文件是否属于目标用户进行查找 按文件类型查找 - type 根据文件的类型进行查找 文件类型包括普通文件（f）、目录（d）、块设备文件（b）、字符设备文件（c）等 块设备是指成块读取数据的设备（如硬盘、内存等），字符设备是指按单个字符读取数据的设备（如键盘、鼠标等） find . -type d -print #只列出当前目录所有的子目录 find . ! -type d -print #只列出当前目录的非子目录（文件） find . -type f -print #只列出当前目录所有的文件 find . -type l -print #只列出当前目录的所有符号链接 find . -type c -print #只列出当前目录的所有字符设备 find . -type b -print #只列出当前目录的所有块设备 find . -type s -print #只列出当前目录的所有套接字 find . -type p -print #只列出当前目录的所有Fifo 扩展 Xargs find . -type d -empty | xargs rmdir #删除当前目录下所有空文件夹 find . -type f -empty | xargs rm -rf递归查找当前目录及子目录下所有空文件并删除，rm 的 -r参数表示递归，-f表示强制删除 find . -name “*.txt” | xargs rm -rf #查找当前目录下所有.txt文件并删除 例如： find . -type f -atime +10 -name “.txt” -exec cp {} /data ; #找到10天前访问的.txt文件并复制到/data目录中 find . -perm -007 -exec ls -l {} ; #查所有用户都可读写执行的文件同-perm 777 find . -type f -user root -exec chown ubuntu {} ; #将当前目录下所有root的文件改为属于ubuntu find /haha -name “grep.txt” -exec rm -rf {} find . -name ap -o -name may* #查找以ap或may开头的文件 find / -name “aa*.log” –ls find / -size +100M –ls find /etc -size -10k -ls find / -user abc -ls find /root/b35 -type f -ls 各表达式之间使用逻辑运算符 “-a”表示 而且（and） “-o”表示 或者（or） find /boot -size +1024k -a -name “vmlinuz“ find /boot -size +1024k -o -name “vmlinuz“ 知识梳理 查看及切换目录（pwd、cd、ls、du、df） 创建目录和文件（mkdir、touch、ln） 复制、删除、移动目录和文件（cp、rm、mv） 查找目录和文件（which、find）]]></content>
      <tags>
        <tag>linux常用命令</tag>
      </tags>
  </entry>
</search>
