<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux(四)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E5%9B%9B%2F</url>
    <content type="text"><![CDATA[程序安装及管理一、应用程序基础 将软件传到LINUX中 yum install lrzsz （注意：LINUX要能连入互联网，ping www.qq.com）/) 应用程序与系统命令的关系 文件位置 系统命令：一般在/bin和/sbin目录中，或为Shell内部指令 应用程序：通常在/usr/bin和/usr/sbin目录中 主要用途 系统命令：完成对系统的基本管理工作，例如IP配置工具 应用程序：完成相对独立的其他辅助任务，例如网页浏览器 适用环境 系统命令：一般只在字符操作界面中运行 应用程序：根据实际需要，有些程序可在图形界面中运行 运行格式 系统命令：一般包括命令字、命令选项和命令参数 应用程序：通常没有固定的执行格式 典型应用程序的目录结构 文件类型 保存目录 普通执行程序文件 /usr/bin 服务器执行程序文件和管理程序文件 /usr/sbin 应用程序配置文件 /etc 日志文件 /var/log 应用程序文档文件 /usr/share/doc 应用程序手册页文件 /usr/share/man 常见的软件包封装类型 文件类型 保存目录 rpm软件包 扩展名为“.rpm” deb软件包 扩展名为“.deb” 源代码软件包 一般为“.tar.gz”、“.tar.bz2”等格式的压缩包，包含程序的原始代码 绿色免安装的软件包 在压缩包内提供已编译好的执行程序文——解开压缩包后的文件即可直接使用 Centos软件包管理 rpm软件包 RPM Redhat Package Manager 由 Red Hat 公司提出，被众多 Linux 发行版所采用 建立统一的数据库文件 详细记录软件包安装、卸载等变化信息 自动分析软件包依赖关系 RPM 软件包 软件素材参考：http://www.rpm.org 一般命名格式： 查询已安装的 RPM 软件信息 rpm -q[子选项] [软件名] 常用选项 -qa、-qi、 -ql、 -qf、-qc、-qd Rpm –qa查询所有安装的rpm软件包 Rpm –qi 查询已安装的某软件包的信息 Rpm –ql查询已安装的某软件包安装路径 查询未安装的 RPM 软件包文件中信息 rpm - qp[子选项] RPM包文件 常用选项 -qpi、-qpl、-qpc、-qpd 使用rpm 命令只能查询通过 RPM方式安装的软件包信息用，其他途径安装到系统中的软件包，rpm 命令将无法获取相关信息 安装或升级RPM 软件 rpm [选项] RPM包文件 … -i :在当前系统中安装一个新的RPM软件包 -e:卸载指定名称的软件包 -U:检查并升级系统中的某个软件包,若该软件包原来并未安装,曾等同于”-i”选项 -F:检查并更新系统中的某个软件包,若该软件包原来并未安装,则放弃安装 -h:在安装或升级软件包的过程中,以”#”号显示安装进度 -v:显示软件安装过程中的详细信息 –force:强制安装某个软件包,当需要替换已安装的软件包及文件,或者安装一个比当前使用的软件版本更旧的软件时,可以使用此选项 –nodeps:在安装或升级,卸载一个软件包时,不检查与其他软件包的依赖关系 常用选项 -i、 -U、 -F 安装 升级 强制 -vh显示安装进度 rpm -ivh 软件包 卸载指定的RPM软件 rpm -e 软件名 辅助选项 –force、–nodeps、-h、-v、 重建RPM 数据库 [root@localhost ~]# rpm –rebuilddb 或 [root@localhost ~]# rpm –initdb 导入验证公钥 root@localhost ~]# rpm –import /media/cdrom/RPM-GPG-KEY-redhat-release 解决软件包依赖关系方法 安装有依赖关系的多个软件 卸载有依赖关系的多个软件 忽略依赖关系 结合“–nodeps”选项，但可能导致软件异常 源代码编译概述 使用源代码安装软件的优点 获得最新的软件版本，及时修复bug 根据用户需要，灵活定制软件功能 应用场合举例 安装较新版本的应用程序时 当前安装的程序无法满足需要时 需要为应用程序添加新的功能时 源代码编译过程 二、YUM安装软件 YUM，Yellow dog Updater Modified 基于RPM包构建的软件更新机制 可以自动解决依赖关系 所有软件包由集中的YUM软件仓库提供 软件仓库的提供方式 FTP服务：ftp://…… HTTP服务：http://…… 本地目录：file:///……. RPM软件包的来源 CentOS发布的RPM包集合 第三方组织发布的RPM包集合 用户自定义的RPM包集合 构建CentOS 7 软件仓库 RPM包来自CentOS 7 DVD光盘 通过FTP、HTTP或本地目录提供给客户机 在软件仓库中加入非官方RPM包组 包括存在依赖关系的所有RPM包 使用createrepo工具建立仓库数据文件 YUM缓存目录 存放下载的软件包、仓库信息等数据 位于/var/cache/yum/$basearch/$releasever [root@localhost ~]# yum clean all 为客户机指定YUM仓库位置 配置文件：/etc/yum.repos.d/*.repo [root@localhost ~]# vi /etc/yum.repos.d/centos7.repo [base] name=CentOS 7.5 baseurl=ftp://192.168.4.254/centos7 enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 [other] name=Other RPM Packages baseurl=ftp://192.168.4.254/other enabled=1 gpgcheck=0 直接以CentOS 7 光盘作软件仓库 将CentOS 7 光盘放入光驱 指定仓库位置，URL地址为 file:///media/cdrom [root@localhost ~]# vi /etc/yum.repos.d/local.repo …… [local] name=CnetOS 7.3 baseurl=file:///media/cdrom enabled=1 gpgcheck=0 关于yum命令 由软件包yum-3.4.3-150.el7.centos.noarch提供 用来访问YUM仓库，查询、下载及安装、卸载软件包 yum的配置文件 基本设置：/etc/yum.conf 仓库设置：/etc/yum.repos.d/*.repo 日志文件：/var/log/yum.log 查询软件包 yum list [软件名]… yum info [软件名]… yum search &lt;关键词&gt;… 查询软件包组 yum grouplist [包组名]… yum groupinfo &lt;包组名&gt;… 安装软件 yum install [软件名] yum groupinstall &lt;包组名&gt; 升级软件 yum update yum groupupdate 卸载软件 yum remove &lt;软件名&gt;… yum groupremove &lt;包组名&gt;… yum安装: yum源配置文件所在位置:/etc/yum.repos.d/ 注意:此目录下有许多.repo的配置文件,可以全部移走,然后自己创建一个XXX.repo的源文件 编辑XXX.repo的源文件 编辑内容: [名字] ——-自定义 Baseurl=file:///media ——定义yum源仓库为光驱的挂载点 enabled=1 ——-0 :关闭源 1表示开启源 Gpgcheck=0 ——0:不去校验包 1:校验包 效率低 保存退出 安装命令 Yum install 包名 源码包安装:（需要gcc） 下载源码包 解压源码包 tar zxvf 软件名.tar.gz -C /解压目录 ——–解压压缩文件到指定目录里面 配置 ./configure –prefix=/软件放置目录 ——-重新配置软件安装后文件存放的位置 编译 Make ———重新编译二进制 编译安装 Make install ——–编译安装]]></content>
      <tags>
        <tag>程序安装及管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(三)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%B8%89%2F</url>
    <content type="text"><![CDATA[文件操作一、文件内容查看 查看文件内容 cat 命令 cat命令 用途：显示出文件的内容 cat [选项] 文件名 … cat –n 文件名 显示文件内容同时显示行号 more命令 用途：全屏方式分页显示文件内容 交互操作方法 按Enter键向下逐行滚动 按空格键向下翻一屏 按q键退出 Ctrl+f 下翻 Ctrl+b上翻 more [选项] 文件名 … less 命令 用途：与 more 命令相同，但扩展功能更多 交互操作方法 Page Up 向上翻页，Page Down 向下翻页 按“/”键查找内容，“n”下一个内容，“N”上一个内容 其他功能与 more 命令基本类似 less [选项] 文件名 … tail命令 用途：查看文件结尾的少部分内容（默认为10行） tail -n 文件名 … 显示尾部指定行数 tail -f 文件名：动态观察文件变化 wc命令 用途：统计文件中的单词数量（Word Count）等信息 常用命令选项 -l：统计行数 -w：统计单词个数 -c：统计字节数 wc [选项]… 目标文件… wc -l /etc/passwd wc -l /var/log/secure grep命令（支持正则表达式） 用途：在文件中查找并显示包含指定字符串的行 常用命令选项 -i：查找时忽略大小写 -v：反转查找，输出与查找条件不相符的行 查找条件设置 要查找的字符串以双引号括起来 “^……”表示以……开头，“……$”表示以……结尾 “^$”表示空行 grep [选项]… 查找条件 目标文件 例如：grep -v “^#” /etc/yum.conf | grep -v “^$” Grep “^root” /etc/passwd 二、压缩命令gzip、bzip2 gzip命令、bzip2命令 用途：制作压缩文件、解开压缩文件 常用命令选项 -9、-d gzip [-9] 文件名… ——gzip工具压缩文件 bzip2 [-9] 文件名…—–bzip2工具压缩文件 gzip -d .gz格式的压缩文件 ——gzip工具解压文件 bzip2 -d .bz2格式的压缩文件——bzip2工具解压文件 请注意： gzip和bzip2命令使用的压缩算法各不相同 一般来说bzip2的压缩效率要好一些 gunzip 命令 gunzip 等价于 gzip –d gzip -d mkfile.gz 或 gunzip mkfile.gz bunzip2 命令 bzip2和bunzip2命令的用法与gzip、gunzip命令基本相同 tar命令 用途：制作归档文件、释放归档文件 tar [选项] … 归档文件名 源文件或目录 tar [选项]… 归档文件名 [-C 目标目录] 常用命令选项 -c、-x、-v、-f、-p、-t、 -C、-z、-j -c:创建.tar格式包文件 -C:解压时指定释放的目标文件夹 -f:表示使用归档 -j:调用bzip2程序进行压缩或是解压 -p:打包时保留文件及目录的权限 -P:打包时保留文件及目录的绝对路径 -t:列表查看包内的文件 -v:输出详细信息 -x:解压tar格式的包文件 -z:调用gzip程序进行压缩或是解压 压缩归档: Tar zcvf 自定义压缩后的文件名.tar.gz 压缩的对象 Tar jcvf 自定义压缩后的文件名.tar.bzip2 压缩的 对象 解压: Tar zxfv 压缩文件.tar.gz -C 解压后存放的目录 Tar jxvf 压缩文件.tar.bzip2 -C 解压后存放的目录]]></content>
      <tags>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(二)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[文本编辑器 vi 命令一、文件内容编辑 文本编辑器的作用 创建或修改文本文件 维护 Linux 系统中的各种配置文件 Linux中最常用的文本编辑器 vi：类UNIX操作系统的默认文本编辑器。 vim：vim是vi文本编辑器（一般简称为vi编辑器）的增强版本 vi vim 三种工作模式 命令模式、输入模式、末行模式 不同模式之间的切换 I插入式 a追加式 o插入新行后进行编辑 命令模式的基本操作 光标移动 复制、粘贴、删除 文件内容查找 撤销编辑及保存退出 末行模式的基本操作 保存文件及退出vi编辑器 打开新文件或读入其他文件内容 文件内容替换 vim kernel.txt (1)====&gt;命令模式:可以显示行号(:set nu ),可以查找信息(/word).支持上下左右键; 跳到行首^ 跳到行尾$ 跳到文档最开始:gg 跳到文档结尾:G 跳到某一行:10 //跳到第10行. yy //复制光标所在行 p //粘贴到光标所在行的下一行 dd //删除光标所在行 5yy //复制光标所在行开始向下的一共5行 d^ //删除光标所在行到行首 d$ //删除光标所在行到行尾 u //撤销操作 (2)====&gt;命令模式=====&gt;进入编辑模式:i (3)====&gt;命令模式=====&gt;进入编辑模式:i======&gt;末行模式Esc :wq //保存并退出 :q! //强制退出,不保存 :set nu //显示行号 /10 //查找文档中包含”10”的内容,跳转到下一个用n :w /test/test11/aaa.txt //把文件另存为aaa.txt :s/old/new/ //把光标所在行第一个old”替换为”new :s/old/new/g //把光标所在行所有的old”替换为”new :% s/old/new/g //把所有行的old”替换为”new :1,2 s/old/new/g //把第一行和第二行的old字符替换为new=====&gt;需要先执行set nu]]></content>
      <tags>
        <tag>文本编辑器 vi 命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux(一)]]></title>
    <url>%2F2019%2F10%2F17%2FLinux-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[linux命令SHELL 文件位于/bin/bash cat /etc/shells常见的linuxshell有sh、bash、csh、tcsh、ash 其中bash shell是linux默认的shell 查看系统默认shell命令 echo $SHELL LINUX命令分类 内部命令 集成于 Shell 解释器程序内部的一些特殊指令，也称为内建（Built-in）指令 属于 Shell 的一部分 没有单独对应的系统文件 自动载入内存，可以直接使用 外部命令 Linux系统中能够完成特定功能的脚本文件或二进制程序 属于 Shell 解释器程序之外的命令 每个外部命令对应了系统中的一个文件 必须知道其对应的文件位置，由 Shell 加载后才能执行 注意Linux系统将存在外部命令、程序的目录默认添加到“搜索路径”中 当前使用位于这些目录中的外部命令时，用户不需要指定具体的位置。 Echo $PATH 通用的命令行使用格式 命令字 【选项】 【参数】 命令字 是整条命令中最关键的一部分 唯一确定一条命令 注意： Linux命令环境中，对英文字符的处理是区分大小写的 选项 短格式选项：使用“-”符号引导 多个单字符选项可以组合在一起使用 —-ls -a ls -l ls -al 长格式选项：使用“–”符号引导 参数 命令字的处理对象 可以是文件名、目录（路径）名或用户名等内容 个数可以是零到多个 编辑 Linux 命令行的辅助操作 Tab 键 反斜杠“\” —如果输入一行命令内容过长,终端会自动换行,也可以通过插入反斜杠\强制换行 Ctrl＋U 快捷键 ——-快速删除光标之前的所有字符内容 Ctrl＋K 快捷键—–快速删除从点前光标处到行尾的所有字符 Ctrl＋L 快捷键—–快速清空屏幕显示 Ctrl＋C 快捷键—-取消当前命令 如何获得命令帮助 问题 如何能快速、正确使用命令完成操作？ 取得帮助方法 使用help 命令 Help pwd 使用“–help”选项 使用man 手册页 (pageup pagedown翻页 q退出) help:大多数GNU工具都有–help 选项，用来显示工具的一些信息，用法 man:–(manual)显示系统的手册页,也就是查看帮助文档，如果系统没有文档，是不会显示这些帮助信息的，比help要详细 info:是一个基于菜单的超文本系统，是由GNU项目开发并由Linux发布，包括一些关于Linux Shell，工具，GNU项目开发程序说明文档,不但显示一些选项，还会有一些范例 注:一般man用的比较多，比help细，比info简单 目录和文件基本操作 pwd 命令 cd 命令 ls 命令 du 命令 显示当前的工作目录 Pwd 将用户的工作目录更改到其他位置 格式 cd 目标位置 cd ~ cd cd - 说明 切换到目标位置 若不指定目标位置，切换到当前用户的宿主目录 切换到上一次执行 cd 命令之前所在的目录 目录操作 绝对目录：从根目录开始的路径表示方式 相对目录：从当前目录开始的路径表示方式 示例：cd .. 相对路径表示法进入上级目录。 显示目录中内容，包括子目录和文件相关属性信息 ls [选项] [文件或目录… ] ls –l 标志 d代表目录 -代表文件 l代表链接 ls –a 连同显示隐藏文件，以.开头的文件或目录 ls –d 显示目录本身的信息 ls –h 以友好的表示方式显示信息 常用选项 -l 、 -a 、 -A 、 -d 、 -h 、 -g 、 –color 结合通配符 “?”：匹配文件名中的一个未知字符 “*”：匹配文件名中的任意多个字符 ls –color —在字符模式中颜色区分文件类型 深蓝色—-目录 白色——-文件 绿色—-可执行文件 黄色—设备文件 红色——压缩文件 通过别名机制简化常用的、比较长的命令 alias 命令别名 = 命令 设置myls 为ls – alh 的别名 alias myls = ‘ls – alh’ 永久保存定义别名的方式 编辑 ~/.bashrc —–个人配置文件 /etc/bashrc —–全局配置文件 alias la=’ls -a -l’ 统计指定目录（或文件）所占用磁盘空间的大小 du [选项] [文件或目录… ] 选项 -a -h -s 示例 统计磁盘空间占用时包括所有的文件，而不仅仅只统计目录 显示出目录或文件的大小（K、M），默认的大小单位为字节（KB） 只统计每个参数所占用空间总的大小，而不是统计每个子目录、文件的大小 df –h显示剩余磁盘空间 mkdir 创建新的空目录 rmdir 删除一个目录 mkdir [选项] 目录位置及名称 -p：一次性创建嵌套的多层目录 Rmdir删除子目录时，必须是空的。 创建空文件 – touch 更新文件的时间标记 经常用于创建多个新的空文件 touch 文件… 创建链接文件 – ln 为文件或目录建立链接文件 文件类型 软链接，又称符号链接（理解为快捷方式） 硬链接ln [-s] 源文件或目录… 链接文件或目标位置 软链接-s 硬链接 删除原始文件后 失效 仍旧可用 使用范围 适用于文件或目录 只可用于文件 保存位置 与原始文件可以位于不同的文件系统中 必须与原始文件在同一个文件系统（如一个Linux分区）内 取消软链接 Unlink 链接名 如：unlink aa1.txt 查找指定inode号的硬链接文件 ll –i find / -inum 16810953 将需要复制的文件或目录（源）重建一份，并保存为新的文件或目录 cp [选项]… 源文件或目录… 目标文件或目录… 选项 说明 -f 覆盖目标同名文件或目录时不进行提醒，直接强制复制 -i 覆盖目标同名文件或目录时提醒用户确认 -p 复制时保持源文件的权限、属主及时间标记等属性不变 -r 复制目录时必须使用此选项，表示递归复制所有文件及子目录 注意： 复制多个文件或目录时，目标位置必须是目录，且目标目录必须已存在 复制文件的样式 Cp 文件名 子目录中 如：cd /root cp initial-setup-ks.cfg a1 cp 文件名 新文件名 在当前目录复制出一个新文件 支持通配符*？ 复制一个目录及里面所有文件到另一个目录中 Cp –r b3 b34 删除指定的文件或目录 rm [选项] 要删除的文件或目录… 常用选项 -f(强制)、-i（友好提示）、-r（连同子目录） 其中rf可以组合使用 猜一猜：下面命令实现的功能 rm -rf public_html/grub/ rm -i public_html/apg.conf 注意： 不要直接删除系统中已有的目录或配置文件，以避免出现意外故障 移动文件或目录mv mv [选项] … 源文件或目录… 目标文件或目录 将指定的文件或目录转移位置 如果目标位置 与源位置相同，则相当于执行重命名操作 mv mytouch mkfile mv mkfile public_html/ 查找命令/文件存放目录 搜索范围由环境变量 PATH 决定（echo $PATH ） which 命令|程序名 which -a 命令|程序名 查找文件或目录-find 采用递归方式，根据目标的名称、类型、大小等不同属性进行精细查找 find [查找范围] [查找条件表达式] 查找类型 关键字 说明 按名称查找 -name 根据目标文件的名称进行查找，允许使用“”及“?”通配符 find / -name “.txt” -print #在当前目录中中查.txt文件并显示 find . -name “[A-Z]*” -print #在当前目录中查以大写字母开头的文件并显示 按文件大小查找 -size 根据目标文件的大小进行查找 一般使用“＋”、“-”号设置超过或小于指定的大小作为查找条件 常用的容量单位包括 kB（注意 k 是小写）、M、G find . -type f -empty #查找大小为0的文件或空目录 find . -type f -size +1000000c -print #查长度大于1Mb的文件 find . -type f -size +2k#搜索当前目录下大于2KB的文件 按文件属主查找 -user 根据文件是否属于目标用户进行查找 按文件类型查找 - type 根据文件的类型进行查找 文件类型包括普通文件（f）、目录（d）、块设备文件（b）、字符设备文件（c）等 块设备是指成块读取数据的设备（如硬盘、内存等），字符设备是指按单个字符读取数据的设备（如键盘、鼠标等） find . -type d -print #只列出当前目录所有的子目录 find . ! -type d -print #只列出当前目录的非子目录（文件） find . -type f -print #只列出当前目录所有的文件 find . -type l -print #只列出当前目录的所有符号链接 find . -type c -print #只列出当前目录的所有字符设备 find . -type b -print #只列出当前目录的所有块设备 find . -type s -print #只列出当前目录的所有套接字 find . -type p -print #只列出当前目录的所有Fifo 扩展 Xargs find . -type d -empty | xargs rmdir #删除当前目录下所有空文件夹 find . -type f -empty | xargs rm -rf递归查找当前目录及子目录下所有空文件并删除，rm 的 -r参数表示递归，-f表示强制删除 find . -name “*.txt” | xargs rm -rf #查找当前目录下所有.txt文件并删除 例如： find . -type f -atime +10 -name “.txt” -exec cp {} /data ; #找到10天前访问的.txt文件并复制到/data目录中 find . -perm -007 -exec ls -l {} ; #查所有用户都可读写执行的文件同-perm 777 find . -type f -user root -exec chown ubuntu {} ; #将当前目录下所有root的文件改为属于ubuntu find /haha -name “grep.txt” -exec rm -rf {} find . -name ap -o -name may* #查找以ap或may开头的文件 find / -name “aa*.log” –ls find / -size +100M –ls find /etc -size -10k -ls find / -user abc -ls find /root/b35 -type f -ls 各表达式之间使用逻辑运算符 “-a”表示 而且（and） “-o”表示 或者（or） find /boot -size +1024k -a -name “vmlinuz“ find /boot -size +1024k -o -name “vmlinuz“ 知识梳理 查看及切换目录（pwd、cd、ls、du、df） 创建目录和文件（mkdir、touch、ln） 复制、删除、移动目录和文件（cp、rm、mv） 查找目录和文件（which、find）]]></content>
      <tags>
        <tag>linux常用命令</tag>
      </tags>
  </entry>
</search>
